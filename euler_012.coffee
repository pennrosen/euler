# Problem 12
# ==========
# 
# The sequence of triangle numbers is generated by adding the natural
# numbers. So the 7th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 =
# 28. The first ten terms would be:
# 
#                  1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...
# 
# Let us list the factors of the first seven triangle numbers:
# 
#    1: 1
#    3: 1,3
#    6: 1,2,3,6
#   10: 1,2,5,10
#   15: 1,3,5,15
#   21: 1,3,7,21
#   28: 1,2,4,7,14,28
# 
# We can see that 28 is the first triangle number to have over five
# divisors.
# 
# What is the value of the first triangle number to have over five hundred
# divisors?

$solution = 0
givenNumOfDivisors = 500
numOfTriangles = 15000 #arbitrarily large number
triangles = []

sqrt = (n) -> Math.floor(Math.sqrt(n))

for n in [1..numOfTriangles]
	sum = 0
	sum += x for x in [1..n]
	triangles.push sum

for triangle in triangles
	numOfDivisorPairs = 0
	numOfDivisorPairs += 1 for n in [1..sqrt triangle] when triangle % n == 0
	if (numOfDivisorPairs * 2) > givenNumOfDivisors	
		$solution = triangle
		break

# TODO: return your answer for this prompt.
return $solution